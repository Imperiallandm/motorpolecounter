// BLDC Pole Detector (MANUAL stop)
// IMPORTANT!!! Use button or Serial 's' to stop after you have rotated one full mechanical revolution
// For Arduino Mega

const int hallA = 2;
const int hallB = 3;
const int hallC = 4;
const int stopBtn = 6; // pushbutton (active LOW to GND) or use Serial command 's'

volatile unsigned long transitionCount = 0;
bool counting = false;
int lastA, lastB, lastC;

void setup() {
  Serial.begin(115200);
  pinMode(hallA, INPUT_PULLUP);
  pinMode(hallB, INPUT_PULLUP);
  pinMode(hallC, INPUT_PULLUP);
  pinMode(stopBtn, INPUT_PULLUP);

  lastA = digitalRead(hallA);
  lastB = digitalRead(hallB);
  lastC = digitalRead(hallC);

  Serial.println(F("=== BLDC Pole Detector (MANUAL) ==="));
  Serial.println(F("Rotate the wheel once, press the button (or send 's' over serial) when finished."));
}

void loop() {
  int a = digitalRead(hallA);
  int b = digitalRead(hallB);
  int c = digitalRead(hallC);

  if (a != lastA) { transitionCount++; lastA = a; counting = true; }
  if (b != lastB) { transitionCount++; lastB = b; counting = true; }
  if (c != lastC) { transitionCount++; lastC = c; counting = true; }

  // show live count
  static unsigned long lastPrint = 0;
  if (millis() - lastPrint >= 1000 && counting) {
    Serial.print(F("Transitions so far: "));
    Serial.println(transitionCount);
    lastPrint = millis();
  }

  // button press to stop
  if (digitalRead(stopBtn) == LOW) {
    delay(30); // simple debounce
    while (digitalRead(stopBtn) == LOW) delay(10); // wait for release
    finalize();
  }

  // serial 's' to stop
  if (Serial.available()) {
    char cch = Serial.read();
    if (cch == 's' || cch == 'S') {
      finalize();
    }
  }
}

void finalize() {
  Serial.println();
  Serial.println(F("Measurement stopped by user. Calculating..."));
  Serial.print(F("Total transitions: "));
  Serial.println(transitionCount);
  if (transitionCount < 6) {
    Serial.println(F("Too few transitions â€” try again."));
    while (true);
  }
  float polePairs = (float)transitionCount / 6.0;
  int totalPoles = (int)round(polePairs * 2.0);
  Serial.print(F("Estimated pole pairs: "));
  Serial.println(polePairs, 3);
  Serial.print(F("Estimated total magnetic poles: "));
  Serial.println(totalPoles);
  Serial.println(F("Done. Restart Arduino to measure again."));
  while (true);
}
